\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage[swedish]{babel}
\usepackage{amsmath, amsthm, amssymb}
\usepackage{stmaryrd}
\usepackage{tikz}
\usepackage{epstopdf}
\usetikzlibrary{mindmap,trees,arrows,automata}

\usepackage{float}
%\usepackage{graphicx}
\usepackage{graphicx}
\usepackage{rotating}
\usepackage{listings}
\usepackage{color}
\usepackage{fancyheadings}
\usepackage{mathpartir}
\usepackage{array}
\usepackage{listings}
\newcommand{\HRule}{\rule{\linewidth}{0.5mm}}
% for strikethrough in the preface
% \usepackage{ulem}

% Used for code examples without | as a special character
\lstnewenvironment{codeEx}
{\lstset{ basicstyle= \ttfamily }}
{}

\lstnewenvironment{codeExSMALL}
{\lstset{ basicstyle= \ttfamily, linesep=0.01cm }}
{}


% used for code examples where |x| marks x
\lstnewenvironment{codeExDiff}
{\lstset{ basicstyle=\color{gray} \ttfamily
        , moredelim=[is][\color{black}]{|}{|}
        } }
{}

% Used for code inside text
\newcommand{\miniCode}[1] {\tt#1\rm}
\newcommand{\ic}[1] {\miniCode{#1}}
\newcommand{\many}[1]{\overline{#1}}

% Used for objects in löpande text

\newcommand{\obj}[1] {\emph{#1}}
\newcommand{\mobj}[1] {\text{\obj{#1}}}


% Used for keywords
\newcommand{\kw}[1]{\texttt{#1}}

% Used for continuations
\newcommand{\cont}[1] {\tt#1\rm}

\newcommand{\NOTE}[1] {


\shadowbox{\begin{minipage}[t]{1\columnwidth}%
Notering!

#1
\end{minipage}}
}

%BNF
\newcommand{\defBNF}[4] {\text{#1}\quad&#2&::=&\;#3&\text{#4}}
\newcommand{\defaltBNF}[2] {&&|&\;#1&\text{#2}}

% things defined in Opt1.tex %

\newcommand{\iIrr}{$\Phi$}
\newcommand{\iPsi}{$\Psi$}
\newcommand{\oOmega}{$\Omega$}

\newcommand{\conf}[2]{\text{\large$#1$}\Big[#2\Big]}
\newcommand{\csep}{\,\text{\Large;}\,}
\newcommand{\casep}{\,:\,}
\newcommand{\rulesep}{\,\Rightarrow\,}

%CBV semantic
\global\long\def\mc#1#2#3{\conf{}{#1\csep#2\csep#3}}
  % stack ; heap ; expr
\global\long\def\OMEGA#1#2#3{\conf{\Omega}{#3\csep#1\csep#2}}
\global\long\def\PSI#1#2#3{\conf{\Psi}{#3\csep#1\csep#2}}
\global\long\def\IRR#1#2#3{\conf{\Phi}{#3\csep#1\csep#2}}


\global\long\def\red#1#2{#1\Rightarrow#2}


\global\long\def\lred#1#2{\begin{array}{c}
 #1\\
\Rightarrow#2\end{array}}


\global\long\def\heap#1#2{H[#1\mapsto#2]}


\global\long\def\nheap#1#2{H[#1\nrightarrow#2]}


\global\long\def\heapp#1#2#3#4{H[#1\mapsto#2\,;\,#3\mapsto#4]}


\global\long\def\OPT#1{\mobj{OPT}(#1)}


\global\long\def\PAP#1#2{\mobj{PAP}(#1\,#2)}

\global\long\def\CON#1#2{\mobj{CON}(#1\,#2)}

\global\long\def\FUN#1#2{\mobj{FUN}(#1\to#2)}


\global\long\def\THUNK#1{\mobj{THUNK}\,#1}


\global\long\def\cOPT#1#2{\mobj{OPT}\,#1\,:\,#2}


\global\long\def\cOFUN#1#2#3{OFUN\,(#1\to\bullet)_{#2}\,:\,#3}


\global\long\def\oCase#1#2{O\mathtt{case}\,\bullet\,\mathtt{of}\,#1\,:\,#2}


\global\long\def\oLet#1#2#3{O\mathtt{let\,}#1=THUNK\,\bullet\,\mathtt{in}\,#2\,:\,#3}


\global\long\def\oLetObj#1#2#3{O\mathtt{let\,}#1=#2\,\mathtt{in}\,\bullet\,:\,#3}


\global\long\def\oFun#1#2#3{\mobj{OFUN}\,#1\,#2\,:\,#3}


\global\long\def\oInline#1{\mobj{OInlining}\,:\,#1}


\global\long\def\BH{\mobj{BLACKHOLE}}


\global\long\def\eCase#1#2{\mathtt{case}\,#1\,\mathtt{of}\,#2}


\global\long\def\eLet#1#2#3{\mathtt{let}\,#1=#2\,\mathtt{in}\,#3}


% CBN %
\global\long\def\CBNMC#1#2#3#4{\conf{}{#1\csep#2\csep#3\csep#4}}

\global\long\def\CBNOMEGA#1#2#3#4{\conf{\Omega}{#4\csep#1\csep#2\csep#3}}
\global\long\def\CBNPSI#1#2#3#4#5{\conf{\Psi}{#5\csep#1\csep#2\csep#3\csep#4}}
\global\long\def\CBNIRR#1#2#3#4{\conf{\Phi}{#4\csep#1\csep#2\csep#3}}

% pixxX %

\newcommand{\overviewIntro}
{
    \begin{figure}[H]
    \label{figure:overviewIntro}
    \centering
        \begin{tikzpicture}[->,shorten >=1pt,auto,node distance=4.2cm,
                            semithick]
        \tikzstyle{every state}=[rectangle,minimum size=2.0cm]
        \node[state](socker)                      {Sockerkod};
        \node[state](stg)    [right of=socker]    {STG-kod};
        \node[state](stgint) [right of=stg]       {STG-tolk};
        \node[state]                  (opt)       [below of=stg]         {Optimering};
        \path (socker)    edge node {avsockring}   (stg)
              (stg) edge node {} (stgint)
              (stgint)       edge[bend left]  node {} (opt)
              (opt)       edge[bend left] node {} (stgint)
              
              ;
        \end{tikzpicture} 
    \caption{Översikt}
    \end{figure}
}

\newcommand{\overviewStg}
{
    \begin{figure}[H]
    \centering
        \begin{tikzpicture}[->,shorten >=1pt,auto,node distance=4.2cm,
                            semithick]
        \tikzstyle{every state}=[rectangle,minimum size=2.0cm]
        \node[state](socker)                      {Sockerkod};
        \node[state,fill=gray!30!white](stg)    [right of=socker]    {STG-kod};
        \node[state](stgint) [right of=stg]       {STG-tolk};
        \node[state]                  (opt)       [below of=stg]         {Optimering};
        \path (socker)    edge node {avsockring}   (stg)
              (stg) edge node {} (stgint)
              (stgint)       edge[bend left]  node {} (opt)
              (opt)       edge[bend left] node {} (stgint)
              
              ;
        \end{tikzpicture} 
        \caption{Översikt med fokus på STG-språket}
        \label{figure:overviewStg}
    \end{figure}
}

\newcommand{\overviewStgInt}
{
    \begin{figure}[H]
    \centering
        \begin{tikzpicture}[->,shorten >=1pt,auto,node distance=4.2cm,
                            semithick]
        \tikzstyle{every state}=[rectangle,minimum size=2.0cm]
        \node[state](socker)                      {Sockerkod};
        \node[state](stg)    [right of=socker]    {STG-kod};
        \node[state,fill=gray!30!white](stgint) [right of=stg]       {STG-tolk};
        \node[state]                  (opt)       [below of=stg]         {Optimering};
        \path (socker)    edge node {avsockring}   (stg)
              (stg) edge node {} (stgint)
              (stgint)       edge[bend left]  node {} (opt)
              (opt)       edge[bend left] node {} (stgint)
              
              ;
        \end{tikzpicture} 
        \caption{Översikt med fokus på tolken}
        \label{figure:overviewStgInt}
    \end{figure}
}

\newcommand{\overviewOptimise}
{
    \begin{figure}[H]
    \centering
        \begin{tikzpicture}[->,shorten >=1pt,auto,node distance=4.2cm,
                            semithick]
        \tikzstyle{every state}=[rectangle,minimum size=2.0cm]
        \node[state](socker)                      {Sockerkod};
        \node[state](stg)    [right of=socker]    {STG-kod};
        \node[state](stgint) [right of=stg]       {STG-tolk};
        \node[state,fill=gray!30!white]                  (opt)       [below of=stg]         {Optimering};
        \path (socker)    edge node {avsockring}   (stg)
              (stg) edge node {} (stgint)
              (stgint)       edge[bend left]  node {} (opt)
              (opt)       edge[bend left] node {} (stgint)
              
              ;
        \end{tikzpicture} 
        \caption{Översikt med fokus på optimeringen}
        \label{figure:overviewOptimise}
    \end{figure}
}

\newcommand{\overviewSugar}
{
    \begin{figure}[H]
    \centering
        \begin{tikzpicture}[->,shorten >=1pt,auto,node distance=4.2cm,
                            semithick]
        \tikzstyle{every state}=[rectangle,minimum size=2.0cm]
        \node[state,fill=gray!30!white](socker)                      {Sockerkod};
        \node[state](stg)    [right of=socker]    {STG-kod};
        \node[state](stgint) [right of=stg]       {STG-tolk};
        \node[state]                  (opt)       [below of=stg]         {Optimering};
        \path (socker)    edge node {avsockring}   (stg)
              (stg) edge node {} (stgint)
              (stgint)       edge[bend left]  node {} (opt)
              (opt)       edge[bend left] node {} (stgint)
              
              ;
        \end{tikzpicture} 
    \caption{Översikt med fokus på sockerspråket}
    \label{figure:overviewSugar}
    \end{figure}
}


\newcommand{\stgOptimise}
{
    \begin{figure}[H]
    \centering
        \begin{tikzpicture}[->,>=stealth',shorten >=1pt,auto,node distance=2.8cm,
                            semithick]
            \tikzstyle{every state}=[fill=blue,draw=none,text=white]
            \node[state,fill=red!50!black,rectangle](stg)   {STG};
            \node[state](omega) [below of=stg]          {$\Omega$};
            \node[state](psi)   [below right  of=omega]  {$\Psi$};
            \node[state](irr)   [below left of=omega]  {$\Phi$};
            \path (stg)   edge[line width=2pt, bend left] node {start} (omega)
                          edge[bend left] node {} (psi)
                  (omega) edge node {} (psi)
                          edge node {} (irr)
                          edge[bend left] node {} (stg)
                  (irr)   edge node {} (omega)
                          edge[line width=2pt,bend left] node {stopp} (stg)
                  (psi)   edge node {} (omega)
                          edge node {} (irr);
                  
            
            
        \end{tikzpicture}
        \caption{Hur tillstånden kan gå mellan varandra}
        \label{fig:Optimise:states}
    \end{figure}
}


